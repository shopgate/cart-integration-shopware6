!function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(i,a,function(t){return e[t]}.bind(null,a));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=(window.__sw__.assetPath + '/bundles/sgateshopgatepluginsw6/'),n(n.s="bxrK")}({"29FF":function(e,t,n){},"2qat":function(e,t){var n=Shopware,i=n.Component,a=n.Utils;i.extend("sg-api-credentials-create","sg-api-credentials-detail",{template:"",beforeRouteEnter:function(e,t,n){e.name.includes("sg.api.credentials.create")&&!e.params.id&&(e.params.id=a.createId(),e.params.newItem=!0),n()},methods:{getEntity:function(){this.item=this.repository.create(Shopware.Context.api)},saveFinish:function(){this.isSaveSuccessful=!1,this.$router.push({name:"sg.api.credentials.detail",params:{id:this.item.id}})},onClickSave:function(){var e=this;this.isLoading=!0,this.repository.save(this.item,Shopware.Context.api).then((function(){e.handleSaveSuccess(),e.$router.push({name:"sg.api.credentials.detail",params:{id:e.item.id}})})).catch((function(t){e.handleSaveFailure(t)}))}}})},"76k6":function(e,t,n){var i=n("29FF");i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("ydqr").default)("3fbd3c84",i,!0,{})},FPn0:function(e,t){Shopware.Component.override("sw-order-detail",{computed:{orderCriteria:function(){var e=this.$super("orderCriteria");return e.addAssociation("shopgateOrder"),e}}})},IPkz:function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t,i){return(t=function(e){var t=function(e,t){if("object"!==n(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var a=i.call(e,t||"default");if("object"!==n(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===n(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var s=Shopware,l=s.Component,o=(s.Context,s.Utils,Shopware.Data.Criteria);l.extend("sg-channel-language-single-select","sw-entity-single-select",{props:{salesChannelId:{required:!0,type:String,default:null},criteria:{type:Object,required:!1,default:function(){var e=new o(1,this.resultLimit);return e.addAssociation("languages"),e}}},watch:{salesChannelId:function(){var e=this;this.loadData().then((function(t){t.has(e.value)||e.clearSelection()}))}},methods:{loadSelected:function(){var e=this;return this.value?(this.isLoading=!0,this.repository.get(this.salesChannelId,a(a({},this.context),{},{inheritance:!0}),this.criteria).then((function(t){return e.singleSelection=t.languages.get(e.value),e.isLoading=!1,e.singleSelection||e.setValue(t.languages.first()),e.singleSelection}))):(this.resetOption&&(this.singleSelection={id:null,name:this.resetOption}),Promise.resolve())},loadData:function(){var e=this;return this.isLoading=!0,this.repository.get(this.salesChannelId,a(a({},this.context),{},{inheritance:!0}),this.criteria).then((function(t){return e.isLoading=!1,e.displaySearch(t.languages),t.languages}))},search:function(){var e=this;if(this.criteria.term===this.searchTerm)return Promise.resolve();var t=this.loadData().then((function(){e.resetActiveItem()}));return this.$emit("search",t),t}}})},"S+jR":function(e,t){Shopware.Mixin.register("sg-order-key-value",{methods:{capitalize:function(e){return"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1)},hasSlotData:function(){return this.$slots.default&&this.$slots.default[0]&&(this.$slots.default[0].text&&this.$slots.default[0].text.length||this.$slots.default[0].children&&this.$slots.default[0].children.length)},isEmptyArray:function(e){return Array.isArray(e)&&0===e.length},isDataEmpty:function(e){return("undefined"===e||""===e||null===e||this.isEmptyArray(e))&&!this.hasSlotData()},normalizeValue:function(e){switch(e){case 0:case"0":case!1:return this.$tc("sg-base.no");case 1:case"1":case!0:return this.$tc("sg-base.yes")}return Array.isArray(e)&&e.length>0?e.join(", "):e},normalizeKey:function(e){var t=this;return e.split("_").map((function(e){return t.capitalize(e)})).join(" ")}}})},UNWX:function(e){e.exports=JSON.parse('{"sg-api-credentials":{"general":{"mainMenuItemGeneral":"Shopgate API","description":"Konfigurieren Sie Ihre API Zugangsdaten","active":"Aktiv","salesChannel":"Verkaufskanal (Sales Channel)","language":"Sprache","customerNumber":"Kundennummer","shopNumber":"Shopnummer","apiKey":"API Key"},"list":{"fieldProcessNotRun":"Not erstellt","fieldProcessSucceed":"Erfolgreich erstellt","fieldProcessFailed":"Fehlerhaft","fieldProcessQueued":"In Warteschalnge","title":"Shopgate API Credentials","buttonDelete":"Löschen","modalTitleDelete":"Löschen","contentEmpty":"Es wurden keine API Zugangsdaten eingefügt","textDeleteConfirm":"Möchten Sie die API Zugangsdaten löschen?","buttonCancel":"Abbrechen","buttonAdd":"Hinzufügen","contextMenuEdit":"Bearbeiten","textHeadline":"API Zugangsdaten gespeichert","titleSidebarItemRefresh":"Aktualisieren"},"detail":{"title":"API Zugangsdaten gespeichert","buttonCancel":"Abbrechen","buttonSave":"Speichern","cardTitle":"Einstellungen","fieldTitleHelpTextActive":"Aktive API Verbindung mit diesen Zugangsdaten","fieldTitlePlaceholderCustomerNumber":"123456","fieldTitlePlaceholderShopNumber":"123456","fieldTitlePlaceholderApiKey":"11111111111111111111111","titleNotificationError":"Fehler","titleNotificationSuccess":"Erfolgreich","messageSaveError":"Zugangsdaten können nicht gespeichert werden.","messageSaveUniqueError":"Bitte hinterlegen Sie eine eindeutige Shop-Nummer!","messageSaveSuccess":"Zugangsdaten wurden gespeichert.","noLanguages":"Keine Sprache ausgewählt, bitte Verkaufskanal (Sales Channel) auswählen."}}}')},YORN:function(e,t,n){var i=n("fwGC");i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n("ydqr").default)("e6dd6e04",i,!0,{})},bxrK:function(e,t,n){"use strict";n.r(t);n("S+jR");function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==i(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===i(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Shopware.Component.extend("is-shopgate","sw-condition-base",{template:'{% block sw_condition_value_content %}\n    \n    <sw-single-select name="is-shopgate"\n                      id="is-shopgate"\n                      size="medium"\n                      :options="selectValues"\n                      v-model:value="isShopgate"\n                      class="field--main"\n                      :disabled="disabled">\n    </sw-single-select>\n{% endblock %}\n',computed:{selectValues:function(){return[{label:this.$tc("global.sw-condition.condition.yes"),value:!0},{label:this.$tc("global.sw-condition.condition.no"),value:!1}]},isShopgate:{get:function(){return this.ensureValueExist(),null===this.condition.value.isShopgate&&(this.condition.value.isShopgate=!1),this.condition.value.isShopgate},set:function(e){this.ensureValueExist(),this.condition.value=r(r({},this.condition.value),{},{isShopgate:e})}}}}),Shopware.Application.addServiceProviderDecorator("ruleConditionDataProviderService",(function(e){return e.addCondition("is_shopgate",{component:"is-shopgate",label:"Is Shopgate Mobile",scopes:["global"],group:"misc"}),e}));var l={inject:["repositoryFactory"],computed:{getPaymentName:function(){return this.getOrder().extensions.hasOwnProperty("shopgateOrder")?this.getOrder().extensions.shopgateOrder.receivedData.payment_infos.shopgate_payment_name:null},getShippingName:function(){return this.getOrder().extensions.hasOwnProperty("shopgateOrder")?this.getOrder().extensions.shopgateOrder.receivedData.shipping_infos.display_name:null}},methods:{getOrder:function(){return this.currentOrder?this.currentOrder:this.order?this.order:""}}};function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function d(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==o(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===o(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Shopware.Component.override("sw-order-general-info",function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({template:"{% block sw_order_detail_base_general_info_summary_sub_description %}\n    <div class=\"sw-order-general-info__summary-sub-description\">\n        {{ $tc('sw-order.generalTab.info.summary.on') }}\n        {{ dateFilter(order.orderDateTime, {\n            hour: '2-digit',\n            minute: '2-digit',\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric'\n        }) }}\n        {{ $tc('sw-order.generalTab.info.summary.with') }}\n\n        <template v-if=\"getPaymentName\">\n            <dd>{{ getPaymentName }}</dd>\n        </template>\n        <template v-else>\n            {{ order.transactions.last().paymentMethod.translated.distinguishableName }}\n        </template>\n\n        <template v-if=\"getShippingName\">\n            <dt>{{ $tc('sw-order.detailDeliveries.labelShippingMethod') }}</dt>\n            <dd>{{ getShippingName }}</dd>\n        </template>\n        <template v-else>\n            <template v-if=\"order.deliveries.last()\">\n                {{ $tc('sw-order.generalTab.info.summary.and') }}\n                {{ order.deliveries.last().shippingMethod.translated.name }}\n            </template>\n        </template>\n\n    </div>\n{% endblock %}\n"},l));function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function g(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==u(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===u(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Shopware.Component.override("sw-order-detail-details",function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){g(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({template:'{% block sw_order_detail_details_payment_method_select %}\n    <template v-if="getPaymentName">\n        <sw-select-field\n                disabled\n                :label="$tc(\'sw-order.createBase.detailsFooter.labelPaymentMethod\')"\n                :placeholder="getPaymentName"\n        >\n            <option value="no-value">{{ getPaymentName }}</option>\n        </sw-select-field>\n    </template>\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n\n {% block sw_order_detail_details_shipping_method_select %}\n     <template v-if="getShippingName">\n         <sw-select-field\n                 disabled\n                 :label="$tc(\'sw-order.createBase.detailsFooter.labelShippingMethod\')"\n                 :placeholder="getShippingName"\n         >\n             <option value="no-value">{{ getShippingName }}</option>\n         </sw-select-field>\n     </template>\n     <template v-else>\n         {% parent %}\n     </template>\n {% endblock %}\n\n{% block sw_order_detail_details_custom_fields %}\n    {% parent %}\n    <sg-order-details v-if="acl.can(\'order.editor\') && order.extensions.shopgateOrder"\n                      :sgOrder="order.extensions.shopgateOrder"\n                      class="sg-order"\n    ></sg-order-details>\n{% endblock %}\n'},l));n("FPn0"),n("YORN");Shopware.Component.register("sg-order-details",{template:'{% block sg_order_detail_sections %}\n    <sw-card :title="$tc(\'sg-order.title\')" class="sw-order-delivery-metadata"\n             position-identifier="sg_order_details">\n        <sw-card-section>\n            <sw-container columns="repeat(auto-fit, minmax(180px, 1fr))" gap="0 25px">\n                <sw-description-list>\n                    {% block sg_order_details_order_number %}\n                        <sg-title-content :title="$tc(\'sg-order.number\')"\n                                          :content="sgOrder.shopgateOrderNumber">\n                        </sg-title-content>\n                    {% endblock %}\n                    {% block sg_order_details_shipping_sent %}\n                        <sg-title-content :title="$tc(\'sg-order.shipping.isSent\')"\n                                          :content="sgOrder.receivedData.is_shipping_completed">\n                        </sg-title-content>\n                    {% endblock %}\n                    {% block sg_order_details_shipping_blocked %}\n                        <sg-title-content :title="$tc(\'sg-order.shipping.isBlocked\')"\n                                          :content="sgOrder.receivedData.is_shipping_blocked">\n                        </sg-title-content>\n                    {% endblock %}\n                    {% block sg_order_details_payment_method %}\n                        <sg-title-content :title="$tc(\'sg-order.payment.method\')"\n                                          :content="sgOrder.receivedData.payment_method">\n                        </sg-title-content>\n                    {% endblock %}\n                    {% block sg_order_details_payment_transaction_number %}\n                        <sg-title-content :title="$tc(\'sg-order.payment.transactionNumber\')"\n                                          :content="sgOrder.receivedData.payment_transaction_number">\n                        </sg-title-content>\n                    {% endblock %}\n                    {% block sg_order_details_payment_sent %}\n                        <sg-title-content :title="$tc(\'sg-order.payment.isSent\')" :content="sgOrder.isPaid">\n                        </sg-title-content>\n                    {% endblock %}\n                </sw-description-list>\n                <sw-description-list>\n                    {% block sg_order_details_payment_infos %}\n                        <sg-title-content :title="$tc(\'sg-order.payment.info\')">\n                            <ul class="sg-list">\n                                \n                                <li is="sg-key-value"\n                                    v-for="(value, key) in sgOrder.receivedData.payment_infos"\n                                    v-bind:key="key"\n                                    v-bind:label="key"\n                                    v-bind:content="value"\n                                ></li>\n                            </ul>\n                        </sg-title-content>\n                    {% endblock %}\n                </sw-description-list>\n                <sw-description-list v-if="sgOrder.receivedData.custom_fields"\n                                     v-bind:class="{ \'sg-hidden\': sgOrder.receivedData.custom_fields.length === 0 }">\n                    {% block sg_order_details_custom_fields %}\n                        <sg-title-content :title="$tc(\'sg-order.customFields.title\')">\n                            <ul class="sg-list">\n                                \n                                <li is="sg-key-value"\n                                    v-for="(customField) in sgOrder.receivedData.custom_fields"\n                                    v-bind:key="customField.internal_field_name"\n                                    v-bind:label="customField.label"\n                                    v-bind:content="customField.value"\n                                ></li>\n                            </ul>\n                        </sg-title-content>\n                    {% endblock %}\n                </sw-description-list>\n            </sw-container>\n            <sw-alert variant="warning" v-if="hasShopgateCoupon">\n                <p>{{ $tc(\'sg-order.messages.shopgateCouponNotSupported\') }}</p>\n            </sw-alert>\n        </sw-card-section>\n    </sw-card>\n{% endblock %}\n',props:{sgOrder:{type:Object,required:!0,default:function(){return{}}}},computed:{hasShopgateCoupon:function(){var e,t,n=null===(e=this.sgOrder)||void 0===e||null===(t=e.receivedData)||void 0===t?void 0:t.items;return n&&n.filter((function(e){return"sg_coupon"===e.type})).length}}});var m=Shopware,h=m.Component,f=m.Mixin;h.register("sg-title-content",{mixins:[f.getByName("sg-order-key-value")],template:'{% block sg_order_title_content %}\n    <div v-if="!isEmpty">\n        <dt>{{ normalizeTitle }}</dt>\n        <dd>{{ normalizeContent }}<slot></slot></dd>\n    </div>\n{% endblock %}\n\n',props:{title:{type:String,required:!0},content:{type:[String,Number,Boolean,Array],required:!1,default:null}},computed:{normalizeTitle:function(){var e=this.title;return this.normalizeKey(e)},normalizeContent:function(){var e=this.content;return this.normalizeValue(e)},isEmpty:function(){return this.isDataEmpty(this.content)}}});n("76k6");var b=Shopware,_=b.Component,y=b.Mixin;_.register("sg-key-value",{mixins:[y.getByName("sg-order-key-value")],template:'<li v-if="!isEmpty"><span class="emphasize">{{ normalizeLabel }}</span>: {{ normalizeContent }}</li>',props:{label:{type:String,required:!0},content:{type:[String,Number,Boolean,Array],required:!0}},computed:{normalizeLabel:function(){var e=this.label;return this.normalizeKey(e)},normalizeContent:function(){var e=this.content;return this.normalizeValue(e)},isEmpty:function(){return this.isDataEmpty(this.content)}}});var v=Shopware,S=v.Component,w=v.Mixin,k=Shopware.Data.Criteria;S.register("sg-api-credentials-list",{template:'{% block sg_api_credentials_list %}\n    \n    <sw-page class="sg-api-credentials-list">\n        {% block sg_api_credentials_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block sg_api_credentials_list_smart_bar_header_title %}\n                    <h2>\n                        {% block sg_api_credentials_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sg-api-credentials.list.title\') }}\n                        {% endblock %}\n\n                        {% block sg_api_credentials_list_smart_bar_header_amount %}\n                            <span v-if="!isLoading" class="sw-page__smart-bar-amount">\n                        ({{ total }})\n                        </span>\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sg_api_credentials_list_smart_bar_actions %}\n            <template #smart-bar-actions>\n                {% block sg_api_credentials_list_smart_bar_actions_add %}\n                    <sw-button\n                            class="sg-api-credentials-list__button-create"\n                            variant="primary"\n                            :routerLink="{ name: \'sg.api.credentials.create\' }"\n                    >\n                        {{ $tc(\'sg-api-credentials.list.buttonAdd\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sg_api_credentials_list_cardview %}\n            <template #content>\n                <div class="sg-api-credentials-list__content">\n                    {% block sg_api_credentials_list_content %}\n                        <sw-entity-listing\n                                class="sg-api-credentials-list-grid"\n                                v-if="items && total > 0"\n                                :items="items"\n                                :repository="credentialRepository"\n                                detail-route="sg.api.credentials.detail"\n                                :showSeleciton="true"\n                                :is-loading="isLoading"\n                                :columns="credentialColumns"\n                        >\n\n                            {% block sg_api_credentials_list_grid_columns_active %}\n                                <template #column-active="{ item, isInlineEdit }">\n                                    {% block sg_api_credentials_list_grid_columns_active_inline_edit %}\n                                        <template v-if="isInlineEdit">\n                                            <sw-checkbox-field v-model="item.active"></sw-checkbox-field>\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block sg_api_credentials_list_grid_columns_active_content %}\n                                        <template v-else>\n                                            <sw-icon v-if="item.active" name="regular-checkmark-xs" small\n                                                     class="is--active" color="#1abc9c"></sw-icon>\n                                            <sw-icon v-else name="regular-times-xs" small\n                                                     class="is--inactive" color="#fc427b" size="13"></sw-icon>\n                                        </template>\n                                    {% endblock %}\n                                </template>\n                            {% endblock %}\n\n                            <template #pagination>\n                                {% block sw_order_list_grid_pagination %}\n                                    <sw-pagination :page="page"\n                                                   :limit="limit"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                {% endblock %}\n                            </template>\n\n                        </sw-entity-listing>\n                    {% endblock %}\n\n                    {% block sg_api_credentials_list_empty_state %}\n                        <sw-empty-state v-if="!isLoading && total === 0"\n                                        :title="$tc(\'sg-api-credentials.list.contentEmpty\')"></sw-empty-state>\n                    {% endblock %}\n\n                </div>\n            </template>\n        {% endblock %}\n\n        {% block sg_api_credentials_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="sg-api-credentials-list__sidebar">\n                    {% block sg_api_credentials_list_sidebar_item %}\n                        <sw-sidebar-item\n                                icon="solid-sync"\n                                :title="$tc(\'sg-api-credentials.list.titleSidebarItemRefresh\')"\n                                @click="onRefresh">\n                        </sw-sidebar-item>\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[w.getByName("listing"),w.getByName("notification")],data:function(){return{items:null,isLoading:!1,showDeleteModal:!1,repository:null,total:0}},metaInfo:function(){return{title:this.$createTitle()}},computed:{credentialRepository:function(){return this.repositoryFactory.create("shopgate_api_credentials")},credentialColumns:function(){return this.getColumns()}},methods:{getList:function(){var e=this;this.isLoading=!0;var t=new k(this.page,this.limit);t.setTerm(this.term),t.addAssociation("language"),t.addAssociation("salesChannel"),this.credentialRepository.search(t,Shopware.Context.api).then((function(t){return e.total=t.total,e.items=t,e.isLoading=!1,t})).catch((function(){e.isLoading=!1}))},onDelete:function(e){this.showDeleteModal=e},onCloseDeleteModal:function(){this.showDeleteModal=!1},getColumns:function(){return[{property:"active",label:"sg-api-credentials.general.active",allowResize:!0,align:"center"},{property:"salesChannel.name",label:"sg-api-credentials.general.salesChannel",routerLink:"sg.api.credentials.detail",allowResize:!0,primary:!0},{property:"language.name",label:"sg-api-credentials.general.language",routerLink:"sg.api.credentials.detail",allowResize:!0},{property:"customerNumber",label:"sg-api-credentials.general.customerNumber",routerLink:"sg.api.credentials.detail",allowResize:!0},{property:"shopNumber",label:"sg-api-credentials.general.shopNumber",routerLink:"sg.api.credentials.detail",allowResize:!0},{property:"apiKey",label:"sg-api-credentials.general.apiKey",routerLink:"sg.api.credentials.detail",allowResize:!0}]}}});n("2qat");var O=Shopware,P=O.Component,C=O.Mixin,N=Shopware.Data.Criteria;P.register("sg-api-credentials-detail",{template:'{% block sg_api_credentials_detail %}\n    \n    <sw-page class="sg-api-credentials-detail" v-if="item">\n\n        {% block sg_api_credentials_detail_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block sg_api_credentials_detail_smart_bar_header_title %}\n                    <h2>{{ $tc(\'sg-api-credentials.detail.title\') }}</h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sg_api_credentials_detail_smart_bar_actions %}\n            <template #smart-bar-actions>\n                {% block sg_api_credentials_detail_smart_bar_actions_cancel %}\n                    <sw-button :disabled="item.isLoading" :routerLink="{ name: \'sg.api.credentials.index\' }">\n                        {{ $tc(\'sg-api-credentials.detail.buttonCancel\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block sg_api_credentials_detail_smart_bar_actions_save %}\n                    <sw-button-process\n                            class="sg-api-credentials-detail__save-action"\n                            :isLoading="isLoading"\n                            :processSuccess="processSuccess"\n                            variant="primary"\n                            :disabled="isLoading || !item.salesChannelId || !item.languageId || !item.shopNumber || !item.customerNumber || !item.apiKey"\n                            @process-finish="saveFinish"\n                            @click="onClickSave">\n                        {{ $tc(\'sg-api-credentials.detail.buttonSave\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sg_api_credentials_detail_content %}\n            <template #content>\n                <sw-card-view>\n                    {% block sg_api_credentials_detail_content_partner_card %}\n                        <sw-card :is-loading="isLoading" v-if="item"\n                                 :title="$tc(\'sg-api-credentials.detail.cardTitle\')">\n\n                            {% block sg_api_credentials_detail_content_active %}\n                                <sw-switch-field v-model:value="item.active"\n                                                 class="sg-api-credentials-detail__item_active"\n                                                 :label="$tc(\'sg-api-credentials.general.active\')"\n                                                 :help-text="$tc(\'sg-api-credentials.detail.fieldTitleHelpTextActive\')">\n                                </sw-switch-field>\n                            {% endblock %}\n\n                            {% block sg_api_credentials_detail_content_salesChannels %}\n                                <sw-entity-single-select v-model:value="item.salesChannelId"\n                                                         name="sg-field--api-credentials-salesChannelId"\n                                                         required\n                                                         entity="sales_channel"\n                                                         class="sg-api-credentials-detail__item_sales_channels"\n                                                         :label="$tc(\'sg-api-credentials.general.salesChannel\')">\n                                </sw-entity-single-select>\n                            {% endblock %}\n\n                            {% block sg_api_credentials_detail_content_language %}\n                                <sg-channel-language-single-select v-model:value="item.languageId"\n                                                                   name="sg-field--api-credentials-languageId"\n                                                                   required\n                                                                   entity="sales_channel"\n                                                                   class="sg-api-credentials-detail__item_language"\n                                                                   :salesChannelId="item.salesChannelId"\n                                                                   :label="$tc(\'sg-api-credentials.general.language\')">\n                                </sg-channel-language-single-select>\n                            {% endblock %}\n\n                            {% block sg_api_credentials_detail_content_customerNumber %}\n                                <sw-text-field v-model:value.number="item.customerNumber"\n                                               name="sg-field--api-credentials-customerNumber"\n                                               type="number"\n                                               required\n                                               class="sg-api-credentials-detail__item_customerNumber"\n                                               :label="$tc(\'sg-api-credentials.general.customerNumber\')"\n                                               :placeholder="$tc(\'sg-api-credentials.detail.fieldTitlePlaceholderCustomerNumber\')">\n                                </sw-text-field>\n                            {% endblock %}\n\n                            {% block sg_api_credentials_detail_content_shopNumber %}\n                                <sw-text-field v-model:value.number="item.shopNumber"\n                                               name="sg-field--api-credentials-shopNumber"\n                                               type="number"\n                                               required\n                                               class="sg-api-credentials-detail__item_shop_number"\n                                               :label="$tc(\'sg-api-credentials.general.shopNumber\')"\n                                               :placeholder="$tc(\'sg-api-credentials.detail.fieldTitlePlaceholderShopNumber\')">\n                                </sw-text-field>\n                            {% endblock %}\n\n                            {% block sg_api_credentials_detail_content_apiKey %}\n                                <sw-text-field v-model:value="item.apiKey"\n                                               name="sg-field--api-credentials-apiKey"\n                                               required\n                                               class="sg-api-credentials-detail__item_api_key"\n                                               :label="$tc(\'sg-api-credentials.general.apiKey\')"\n                                               :placeholder="$tc(\'sg-api-credentials.detail.fieldTitlePlaceholderApiKey\')">\n                                </sw-text-field>\n                            {% endblock %}\n\n                        </sw-card>\n                    {% endblock %}\n                </sw-card-view>\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[C.getByName("notification")],data:function(){return{item:null,repository:null,isLoading:!1,processSuccess:!1,isSaveSuccessful:!1,channelRepository:null,languageOptions:[{id:null,name:this.$tc("sg-api-credentials.detail.noLanguages")}],channelLanguageMap:null}},metaInfo:function(){return{title:this.$createTitle()}},created:function(){this.createdComponent()},watch:{"item.salesChannelId":function(e){this.channelLanguageMap&&(this.languageOptions=this.channelLanguageMap[e])}},methods:{createdComponent:function(){this.repository=this.repositoryFactory.create("shopgate_api_credentials"),this.channelResository=this.repositoryFactory.create("sales_channel"),this.createChannelLanguageMap(),this.getEntity()},createChannelLanguageMap:function(){var e=this,t=new N;t.addAssociation("languages"),this.channelResository.search(t,Shopware.Context.api).then((function(t){e.channelLanguageMap=e.languagesToMap(t)}))},getEntity:function(){var e=this,t=new N;t.addAssociation("salesChannel.languages"),this.repository.get(this.$route.params.id,Shopware.Context.api,t).then((function(t){e.item=t,e.languageOptions=t.salesChannel.languages}))},languagesToMap:function(e){var t=[];return e.forEach((function(e){var n=e.id,i=e.languages;return t[n]=i})),t},onClickSave:function(){var e=this;this.isLoading=!0,this.isSaveSuccessful=!1,this.repository.save(this.item,Shopware.Context.api).then((function(){e.getEntity(),e.processSuccess=!0,e.handleSaveSuccess()})).catch((function(t){e.handleSaveFailure(t)}))},handleSaveSuccess:function(){this.isLoading=!1,this.createNotificationSuccess({title:this.$tc("sg-api-credentials.detail.titleNotificationSuccess"),message:this.$tc("sg-api-credentials.detail.messageSaveSuccess")})},handleSaveFailure:function(e){this.isLoading=!1,500===e.response.status?this.createNotificationError({title:this.$tc("sg-api-credentials.detail.titleNotificationError"),message:this.$tc("sg-api-credentials.detail.messageSaveUniqueError")}):this.createNotificationError({title:this.$tc("sg-api-credentials.detail.titleNotificationError"),message:this.$tc("sg-api-credentials.detail.messageSaveError")})},saveFinish:function(){this.processSuccess=!1}}});n("IPkz");var x=n("UNWX"),j=n("zNt0");Shopware.Module.register("sg-api-credentials",{type:"plugin",name:"sg-api-credentials",title:"sg-api-credentials.general.mainMenuItemGeneral",description:"sg-api-credentials.general.description",color:"#9AA8B5",icon:"regular-shopping-bag",snippets:{"de-DE":x,"en-GB":j},routes:{index:{component:"sg-api-credentials-list",path:"index",meta:{parentPath:"sw.settings.index",privilege:"system.system_config"}},detail:{component:"sg-api-credentials-detail",path:"detail/:id",meta:{parentPath:"sg.api.credentials.index",privilege:"system.system_config"}},create:{component:"sg-api-credentials-create",path:"create",meta:{parentPath:"sg.api.credentials.index",privilege:"system.system_config"}}},settingsItem:{name:"sg-api-credentials",to:"sg.api.credentials.index",label:"sg-api-credentials.general.mainMenuItemGeneral",group:"plugins",icon:"regular-shopping-bag"}});Shopware.Component.override("sw-settings-salutation-detail",{template:"\n{% block sw_settings_salutation_detail_content_card_letter_name %}\n    {% parent %}\n    <sw-form-field-renderer\n            v-model:value=\"sgValue\"\n            class=\"sw-settings-salutation-detail__shopgateSalutation\"\n            type=\"single-select\"\n            :config=\"{\n                label: $tc('sg-salutations.detail.genderLabel'),\n                options: [\n                    { value: null, label: $tc('sg-salutations.detail.genderUndefined') },\n                    { value: 'm', label: $tc('sg-salutations.detail.genderMale') },\n                    { value: 'f', label: $tc('sg-salutations.detail.genderFemale') },\n                    { value: 'd', label: $tc('sg-salutations.detail.genderDiverse') }\n                ]\n            }\"\n            :disabled=\"!acl.can('salutation.editor')\"\n            :help-text=\"$tc('sg-salutations.detail.genderTooltip')\">\n    </sw-form-field-renderer>\n{% endblock %}\n",computed:{sgValue:{get:function(){return this.salutation.extensions.shopgateSalutation?this.salutation.extensions.shopgateSalutation.value:null},set:function(e){if(this.salutation.extensions.shopgateSalutation)this.salutation.extensions.shopgateSalutation.value=e;else{var t=this.repositoryFactory.create("shopgate_go_salutations").create(Shopware.Context.api);t.shopwareSalutationId=this.salutationId,t.value=e,this.salutation.extensions={shopgateSalutation:t}}}}}})},fwGC:function(e,t,n){},ydqr:function(e,t,n){"use strict";function i(e,t){for(var n=[],i={},a=0;a<t.length;a++){var r=t[a],s=r[0],l={id:e+":"+a,css:r[1],media:r[2],sourceMap:r[3]};i[s]?i[s].parts.push(l):n.push(i[s]={id:s,parts:[l]})}return n}n.r(t),n.d(t,"default",(function(){return m}));var a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},s=a&&(document.head||document.getElementsByTagName("head")[0]),l=null,o=0,c=!1,d=function(){},u=null,p="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,n,a){c=n,u=a||{};var s=i(e,t);return h(s),function(t){for(var n=[],a=0;a<s.length;a++){var l=s[a];(o=r[l.id]).refs--,n.push(o)}t?h(s=i(e,t)):s=[];for(a=0;a<n.length;a++){var o;if(0===(o=n[a]).refs){for(var c=0;c<o.parts.length;c++)o.parts[c]();delete r[o.id]}}}}function h(e){for(var t=0;t<e.length;t++){var n=e[t],i=r[n.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](n.parts[a]);for(;a<n.parts.length;a++)i.parts.push(b(n.parts[a]));i.parts.length>n.parts.length&&(i.parts.length=n.parts.length)}else{var s=[];for(a=0;a<n.parts.length;a++)s.push(b(n.parts[a]));r[n.id]={id:n.id,refs:1,parts:s}}}}function f(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function b(e){var t,n,i=document.querySelector("style["+p+'~="'+e.id+'"]');if(i){if(c)return d;i.parentNode.removeChild(i)}if(g){var a=o++;i=l||(l=f()),t=v.bind(null,i,a,!1),n=v.bind(null,i,a,!0)}else i=f(),t=S.bind(null,i),n=function(){i.parentNode.removeChild(i)};return t(e),function(i){if(i){if(i.css===e.css&&i.media===e.media&&i.sourceMap===e.sourceMap)return;t(e=i)}else n()}}var _,y=(_=[],function(e,t){return _[e]=t,_.filter(Boolean).join("\n")});function v(e,t,n,i){var a=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=y(t,a);else{var r=document.createTextNode(a),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(r,s[t]):e.appendChild(r)}}function S(e,t){var n=t.css,i=t.media,a=t.sourceMap;if(i&&e.setAttribute("media",i),u.ssrId&&e.setAttribute(p,t.id),a&&(n+="\n/*# sourceURL="+a.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},zNt0:function(e){e.exports=JSON.parse('{"sg-api-credentials":{"general":{"mainMenuItemGeneral":"Shopgate API","description":"Configure your API credential sets","active":"Active","salesChannel":"SalesChannel","language":"Language","customerNumber":"Customer Number","shopNumber":"Shop Number","apiKey":"API Key"},"list":{"fieldProcessNotRun":"Not created","fieldProcessSucceed":"Successfully created","fieldProcessFailed":"Failed","fieldProcessQueued":"Queued","title":"Shopgate API Credentials","buttonDelete":"Delete","modalTitleDelete":"Delete","contentEmpty":"No API credentials exist","textDeleteConfirm":"Do you want to delete the API credential set?","buttonCancel":"Cancel","buttonAdd":"Add","contextMenuEdit":"Edit","textHeadline":"API credential set","titleSidebarItemRefresh":"Refresh"},"detail":{"title":"API Credentials Set","buttonCancel":"Cancel","buttonSave":"Save","cardTitle":"Settings","fieldTitleHelpTextActive":"Activate API connection using these credentials","fieldTitlePlaceholderCustomerNumber":"123456","fieldTitlePlaceholderShopNumber":"123456","fieldTitlePlaceholderApiKey":"11111111111111111111111","titleNotificationError":"Error","titleNotificationSuccess":"Success","messageSaveError":"Credentials could not be saved.","messageSaveUniqueError":"Please make sure your Shop Number is unique!","messageSaveSuccess":"Credentials have been saved.","noLanguages":"No languages are defined, please select a Sales Channel"}}}')}});